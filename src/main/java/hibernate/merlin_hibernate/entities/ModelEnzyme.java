package hibernate.merlin_hibernate.entities;
// Generated 18/mai/2018 12:30:24 by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ModelEnzyme generated by hbm2java
 */
@Entity
@Table(name = "model_enzyme", catalog = "test_hibernate")
public class ModelEnzyme implements java.io.Serializable {

	private ModelEnzymeId id;
	private ModelProtein modelProtein;
	private Boolean inModel;
	private String source;
	private String gprStatus;
	private Set<ModelEnzymeHasModule> modelEnzymeHasModules = new HashSet<ModelEnzymeHasModule>(0);
	private Set<ModelSubunit> modelSubunits = new HashSet<ModelSubunit>(0);
	private Set<ModelReaction> modelReactions = new HashSet<ModelReaction>(0);
	private Set<ModelPathway> modelPathways = new HashSet<ModelPathway>(0);
	private Set<ModelReaction> modelReactions_1 = new HashSet<ModelReaction>(0);

	public ModelEnzyme() {
	}

	public ModelEnzyme(ModelEnzymeId id, ModelProtein modelProtein) {
		this.id = id;
		this.modelProtein = modelProtein;
	}

	public ModelEnzyme(ModelEnzymeId id, ModelProtein modelProtein, Boolean inModel, String source, String gprStatus,
			Set<ModelEnzymeHasModule> modelEnzymeHasModules, Set<ModelSubunit> modelSubunits,
			Set<ModelReaction> modelReactions, Set<ModelPathway> modelPathways, Set<ModelReaction> modelReactions_1) {
		this.id = id;
		this.modelProtein = modelProtein;
		this.inModel = inModel;
		this.source = source;
		this.gprStatus = gprStatus;
		this.modelEnzymeHasModules = modelEnzymeHasModules;
		this.modelSubunits = modelSubunits;
		this.modelReactions = modelReactions;
		this.modelPathways = modelPathways;
		this.modelReactions_1 = modelReactions_1;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "ecnumber", column = @Column(name = "ecnumber", nullable = false, length = 15)),
			@AttributeOverride(name = "proteinIdprotein", column = @Column(name = "protein_idprotein", nullable = false)) })
	public ModelEnzymeId getId() {
		return this.id;
	}

	public void setId(ModelEnzymeId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "protein_idprotein", nullable = false, insertable = false, updatable = false)
	public ModelProtein getModelProtein() {
		return this.modelProtein;
	}

	public void setModelProtein(ModelProtein modelProtein) {
		this.modelProtein = modelProtein;
	}

	@Column(name = "inModel")
	public Boolean getInModel() {
		return this.inModel;
	}

	public void setInModel(Boolean inModel) {
		this.inModel = inModel;
	}

	@Column(name = "source", length = 45)
	public String getSource() {
		return this.source;
	}

	public void setSource(String source) {
		this.source = source;
	}

	@Column(name = "gpr_status", length = 45)
	public String getGprStatus() {
		return this.gprStatus;
	}

	public void setGprStatus(String gprStatus) {
		this.gprStatus = gprStatus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelEnzyme")
	public Set<ModelEnzymeHasModule> getModelEnzymeHasModules() {
		return this.modelEnzymeHasModules;
	}

	public void setModelEnzymeHasModules(Set<ModelEnzymeHasModule> modelEnzymeHasModules) {
		this.modelEnzymeHasModules = modelEnzymeHasModules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelEnzyme")
	public Set<ModelSubunit> getModelSubunits() {
		return this.modelSubunits;
	}

	public void setModelSubunits(Set<ModelSubunit> modelSubunits) {
		this.modelSubunits = modelSubunits;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_activating_reaction", catalog = "test_hibernate", joinColumns = {
			@JoinColumn(name = "enzyme_ecnumber", nullable = false, updatable = false),
			@JoinColumn(name = "enzyme_protein_idprotein", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "reaction_idreaction", nullable = false, updatable = false) })
	public Set<ModelReaction> getModelReactions() {
		return this.modelReactions;
	}

	public void setModelReactions(Set<ModelReaction> modelReactions) {
		this.modelReactions = modelReactions;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_pathway_has_enzyme", catalog = "test_hibernate", joinColumns = {
			@JoinColumn(name = "enzyme_ecnumber", nullable = false, updatable = false),
			@JoinColumn(name = "enzyme_protein_idprotein", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "pathway_idpathway", nullable = false, updatable = false) })
	public Set<ModelPathway> getModelPathways() {
		return this.modelPathways;
	}

	public void setModelPathways(Set<ModelPathway> modelPathways) {
		this.modelPathways = modelPathways;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_reaction_has_enzyme", catalog = "test_hibernate", joinColumns = {
			@JoinColumn(name = "enzyme_ecnumber", nullable = false, updatable = false),
			@JoinColumn(name = "enzyme_protein_idprotein", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "reaction_idreaction", nullable = false, updatable = false) })
	public Set<ModelReaction> getModelReactions_1() {
		return this.modelReactions_1;
	}

	public void setModelReactions_1(Set<ModelReaction> modelReactions_1) {
		this.modelReactions_1 = modelReactions_1;
	}

}
