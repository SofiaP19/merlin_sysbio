package hibernate.merlin_hibernate.entities;
// Generated 18/mai/2018 12:30:24 by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ModelGene generated by hbm2java
 */
@Entity
@Table(name = "model_gene", catalog = "sysbio_model")
public class ModelGene implements java.io.Serializable {

	private Integer idgene;
	private ModelChromosome modelChromosome;
	private String name;
	private String locusTag;
	private String transcriptionDirection;
	private String leftEndPosition;
	private String rightEndPosition;
	private String booleanRule;
	private String origin;
	private String sequenceId;
	private Set<ModelSubunit> modelSubunits = new HashSet<ModelSubunit>(0);
	private Set<ModelGeneHasCompartment> modelGeneHasCompartments = new HashSet<ModelGeneHasCompartment>(0);
	private Set<ModelGeneHasOrthology> modelGeneHasOrthologies = new HashSet<ModelGeneHasOrthology>(0);
	private Set<ModelSequence> modelSequences = new HashSet<ModelSequence>(0);
	private Set<ModelTranscriptionUnit> modelTranscriptionUnits = new HashSet<ModelTranscriptionUnit>(0);

	public ModelGene() {
	}

	public ModelGene(String origin, String sequenceId) {
		this.origin = origin;
		this.sequenceId = sequenceId;
	}

	public ModelGene(ModelChromosome modelChromosome, String name, String locusTag, String transcriptionDirection,
			String leftEndPosition, String rightEndPosition, String booleanRule, String origin, String sequenceId,
			Set<ModelSubunit> modelSubunits, Set<ModelGeneHasCompartment> modelGeneHasCompartments,
			Set<ModelGeneHasOrthology> modelGeneHasOrthologies, Set<ModelSequence> modelSequences,
			Set<ModelTranscriptionUnit> modelTranscriptionUnits) {
		this.modelChromosome = modelChromosome;
		this.name = name;
		this.locusTag = locusTag;
		this.transcriptionDirection = transcriptionDirection;
		this.leftEndPosition = leftEndPosition;
		this.rightEndPosition = rightEndPosition;
		this.booleanRule = booleanRule;
		this.origin = origin;
		this.sequenceId = sequenceId;
		this.modelSubunits = modelSubunits;
		this.modelGeneHasCompartments = modelGeneHasCompartments;
		this.modelGeneHasOrthologies = modelGeneHasOrthologies;
		this.modelSequences = modelSequences;
		this.modelTranscriptionUnits = modelTranscriptionUnits;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idgene", unique = true, nullable = false)
	public Integer getIdgene() {
		return this.idgene;
	}

	public void setIdgene(Integer idgene) {
		this.idgene = idgene;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "chromosome_idchromosome")
	public ModelChromosome getModelChromosome() {
		return this.modelChromosome;
	}

	public void setModelChromosome(ModelChromosome modelChromosome) {
		this.modelChromosome = modelChromosome;
	}

	@Column(name = "name", length = 120)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "locusTag", length = 45)
	public String getLocusTag() {
		return this.locusTag;
	}

	public void setLocusTag(String locusTag) {
		this.locusTag = locusTag;
	}

	@Column(name = "transcription_direction", length = 3)
	public String getTranscriptionDirection() {
		return this.transcriptionDirection;
	}

	public void setTranscriptionDirection(String transcriptionDirection) {
		this.transcriptionDirection = transcriptionDirection;
	}

	@Column(name = "left_end_position", length = 45)
	public String getLeftEndPosition() {
		return this.leftEndPosition;
	}

	public void setLeftEndPosition(String leftEndPosition) {
		this.leftEndPosition = leftEndPosition;
	}

	@Column(name = "right_end_position", length = 100)
	public String getRightEndPosition() {
		return this.rightEndPosition;
	}

	public void setRightEndPosition(String rightEndPosition) {
		this.rightEndPosition = rightEndPosition;
	}

	@Column(name = "boolean_rule", length = 200)
	public String getBooleanRule() {
		return this.booleanRule;
	}

	public void setBooleanRule(String booleanRule) {
		this.booleanRule = booleanRule;
	}

	@Column(name = "origin", nullable = false, length = 40)
	public String getOrigin() {
		return this.origin;
	}

	public void setOrigin(String origin) {
		this.origin = origin;
	}

	@Column(name = "sequence_id", nullable = false, length = 45)
	public String getSequenceId() {
		return this.sequenceId;
	}

	public void setSequenceId(String sequenceId) {
		this.sequenceId = sequenceId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelGene")
	public Set<ModelSubunit> getModelSubunits() {
		return this.modelSubunits;
	}

	public void setModelSubunits(Set<ModelSubunit> modelSubunits) {
		this.modelSubunits = modelSubunits;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelGene")
	public Set<ModelGeneHasCompartment> getModelGeneHasCompartments() {
		return this.modelGeneHasCompartments;
	}

	public void setModelGeneHasCompartments(Set<ModelGeneHasCompartment> modelGeneHasCompartments) {
		this.modelGeneHasCompartments = modelGeneHasCompartments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelGene")
	public Set<ModelGeneHasOrthology> getModelGeneHasOrthologies() {
		return this.modelGeneHasOrthologies;
	}

	public void setModelGeneHasOrthologies(Set<ModelGeneHasOrthology> modelGeneHasOrthologies) {
		this.modelGeneHasOrthologies = modelGeneHasOrthologies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelGene")
	public Set<ModelSequence> getModelSequences() {
		return this.modelSequences;
	}

	public void setModelSequences(Set<ModelSequence> modelSequences) {
		this.modelSequences = modelSequences;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_transcription_unit_gene", catalog = "sysbio_model", joinColumns = {
			@JoinColumn(name = "gene_idgene", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "transcription_unit_idtranscription_unit", nullable = false, updatable = false) })
	public Set<ModelTranscriptionUnit> getModelTranscriptionUnits() {
		return this.modelTranscriptionUnits;
	}

	public void setModelTranscriptionUnits(Set<ModelTranscriptionUnit> modelTranscriptionUnits) {
		this.modelTranscriptionUnits = modelTranscriptionUnits;
	}

}
