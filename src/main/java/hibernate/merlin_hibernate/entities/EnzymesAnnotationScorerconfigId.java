package hibernate.merlin_hibernate.entities;
// Generated 4/jun/2018 16:57:32 by Hibernate Tools 5.2.8.Final


import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * EnzymesAnnotationScorerconfigId generated by hbm2java
 */
@Embeddable
public class EnzymesAnnotationScorerconfigId  implements java.io.Serializable {


     private float threshold;
     private float upperThreshold;
     private float balanceBh;
     private float alpha;
     private float beta;
     private int minHomologies;
     private String blastDb;
     private boolean bestAlpha;
     private boolean latest;

    public EnzymesAnnotationScorerconfigId() {
    }

    public EnzymesAnnotationScorerconfigId(float threshold, float upperThreshold, float balanceBh, float alpha, float beta, int minHomologies, String blastDb, boolean bestAlpha, boolean latest) {
       this.threshold = threshold;
       this.upperThreshold = upperThreshold;
       this.balanceBh = balanceBh;
       this.alpha = alpha;
       this.beta = beta;
       this.minHomologies = minHomologies;
       this.blastDb = blastDb;
       this.bestAlpha = bestAlpha;
       this.latest = latest;
    }
   


    @Column(name="threshold", nullable=false, precision=12, scale=0)
    public float getThreshold() {
        return this.threshold;
    }
    
    public void setThreshold(float threshold) {
        this.threshold = threshold;
    }


    @Column(name="upperThreshold", nullable=false, precision=12, scale=0)
    public float getUpperThreshold() {
        return this.upperThreshold;
    }
    
    public void setUpperThreshold(float upperThreshold) {
        this.upperThreshold = upperThreshold;
    }


    @Column(name="balanceBH", nullable=false, precision=12, scale=0)
    public float getBalanceBh() {
        return this.balanceBh;
    }
    
    public void setBalanceBh(float balanceBh) {
        this.balanceBh = balanceBh;
    }


    @Column(name="alpha", nullable=false, precision=12, scale=0)
    public float getAlpha() {
        return this.alpha;
    }
    
    public void setAlpha(float alpha) {
        this.alpha = alpha;
    }


    @Column(name="beta", nullable=false, precision=12, scale=0)
    public float getBeta() {
        return this.beta;
    }
    
    public void setBeta(float beta) {
        this.beta = beta;
    }


    @Column(name="minHomologies", nullable=false)
    public int getMinHomologies() {
        return this.minHomologies;
    }
    
    public void setMinHomologies(int minHomologies) {
        this.minHomologies = minHomologies;
    }


    @Column(name="blastDB", nullable=false, length=45)
    public String getBlastDb() {
        return this.blastDb;
    }
    
    public void setBlastDb(String blastDb) {
        this.blastDb = blastDb;
    }


    @Column(name="bestAlpha", nullable=false)
    public boolean isBestAlpha() {
        return this.bestAlpha;
    }
    
    public void setBestAlpha(boolean bestAlpha) {
        this.bestAlpha = bestAlpha;
    }


    @Column(name="latest", nullable=false)
    public boolean isLatest() {
        return this.latest;
    }
    
    public void setLatest(boolean latest) {
        this.latest = latest;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof EnzymesAnnotationScorerconfigId) ) return false;
		 EnzymesAnnotationScorerconfigId castOther = ( EnzymesAnnotationScorerconfigId ) other; 
         
		 return (this.getThreshold()==castOther.getThreshold())
 && (this.getUpperThreshold()==castOther.getUpperThreshold())
 && (this.getBalanceBh()==castOther.getBalanceBh())
 && (this.getAlpha()==castOther.getAlpha())
 && (this.getBeta()==castOther.getBeta())
 && (this.getMinHomologies()==castOther.getMinHomologies())
 && ( (this.getBlastDb()==castOther.getBlastDb()) || ( this.getBlastDb()!=null && castOther.getBlastDb()!=null && this.getBlastDb().equals(castOther.getBlastDb()) ) )
 && (this.isBestAlpha()==castOther.isBestAlpha())
 && (this.isLatest()==castOther.isLatest());
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + (int) this.getThreshold();
         result = 37 * result + (int) this.getUpperThreshold();
         result = 37 * result + (int) this.getBalanceBh();
         result = 37 * result + (int) this.getAlpha();
         result = 37 * result + (int) this.getBeta();
         result = 37 * result + this.getMinHomologies();
         result = 37 * result + ( getBlastDb() == null ? 0 : this.getBlastDb().hashCode() );
         result = 37 * result + (this.isBestAlpha()?1:0);
         result = 37 * result + (this.isLatest()?1:0);
         return result;
   }   


}


