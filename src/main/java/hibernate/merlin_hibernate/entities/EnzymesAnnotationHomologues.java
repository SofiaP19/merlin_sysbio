package hibernate.merlin_hibernate.entities;
// Generated 18/mai/2018 12:30:24 by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * EnzymesAnnotationHomologues generated by hbm2java
 */
@Entity
@Table(name = "enzymes_annotation_homologues", catalog = "test_hibernate")
public class EnzymesAnnotationHomologues implements java.io.Serializable {

	private Integer SKey;
	private EnzymesAnnotationOrganism enzymesAnnotationOrganism;
	private String locusId;
	private String definition;
	private Float calculatedMw;
	private String product;
	private String organelle;
	private Boolean uniprotStar;
	private Set<EnzymesAnnotationEcnumber> enzymesAnnotationEcnumbers = new HashSet<EnzymesAnnotationEcnumber>(0);
	private Set<EnzymesAnnotationGenehomologyHasHomologues> enzymesAnnotationGenehomologyHasHomologueses = new HashSet<EnzymesAnnotationGenehomologyHasHomologues>(
			0);

	public EnzymesAnnotationHomologues() {
	}

	public EnzymesAnnotationHomologues(EnzymesAnnotationOrganism enzymesAnnotationOrganism) {
		this.enzymesAnnotationOrganism = enzymesAnnotationOrganism;
	}

	public EnzymesAnnotationHomologues(EnzymesAnnotationOrganism enzymesAnnotationOrganism, String locusId,
			String definition, Float calculatedMw, String product, String organelle, Boolean uniprotStar,
			Set<EnzymesAnnotationEcnumber> enzymesAnnotationEcnumbers,
			Set<EnzymesAnnotationGenehomologyHasHomologues> enzymesAnnotationGenehomologyHasHomologueses) {
		this.enzymesAnnotationOrganism = enzymesAnnotationOrganism;
		this.locusId = locusId;
		this.definition = definition;
		this.calculatedMw = calculatedMw;
		this.product = product;
		this.organelle = organelle;
		this.uniprotStar = uniprotStar;
		this.enzymesAnnotationEcnumbers = enzymesAnnotationEcnumbers;
		this.enzymesAnnotationGenehomologyHasHomologueses = enzymesAnnotationGenehomologyHasHomologueses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "s_key", unique = true, nullable = false)
	public Integer getSKey() {
		return this.SKey;
	}

	public void setSKey(Integer SKey) {
		this.SKey = SKey;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "organism_s_key", nullable = false)
	public EnzymesAnnotationOrganism getEnzymesAnnotationOrganism() {
		return this.enzymesAnnotationOrganism;
	}

	public void setEnzymesAnnotationOrganism(EnzymesAnnotationOrganism enzymesAnnotationOrganism) {
		this.enzymesAnnotationOrganism = enzymesAnnotationOrganism;
	}

	@Column(name = "locusID", length = 100)
	public String getLocusId() {
		return this.locusId;
	}

	public void setLocusId(String locusId) {
		this.locusId = locusId;
	}

	@Column(name = "definition", length = 65535)
	public String getDefinition() {
		return this.definition;
	}

	public void setDefinition(String definition) {
		this.definition = definition;
	}

	@Column(name = "calculated_mw", precision = 12, scale = 0)
	public Float getCalculatedMw() {
		return this.calculatedMw;
	}

	public void setCalculatedMw(Float calculatedMw) {
		this.calculatedMw = calculatedMw;
	}

	@Column(name = "product", length = 65535)
	public String getProduct() {
		return this.product;
	}

	public void setProduct(String product) {
		this.product = product;
	}

	@Column(name = "organelle", length = 100)
	public String getOrganelle() {
		return this.organelle;
	}

	public void setOrganelle(String organelle) {
		this.organelle = organelle;
	}

	@Column(name = "uniprot_star")
	public Boolean getUniprotStar() {
		return this.uniprotStar;
	}

	public void setUniprotStar(Boolean uniprotStar) {
		this.uniprotStar = uniprotStar;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "enzymes_annotation_homologues_has_ecnumber", catalog = "test_hibernate", joinColumns = {
			@JoinColumn(name = "homologues_s_key", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ecNumber_s_key", nullable = false, updatable = false) })
	public Set<EnzymesAnnotationEcnumber> getEnzymesAnnotationEcnumbers() {
		return this.enzymesAnnotationEcnumbers;
	}

	public void setEnzymesAnnotationEcnumbers(Set<EnzymesAnnotationEcnumber> enzymesAnnotationEcnumbers) {
		this.enzymesAnnotationEcnumbers = enzymesAnnotationEcnumbers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "enzymesAnnotationHomologues")
	public Set<EnzymesAnnotationGenehomologyHasHomologues> getEnzymesAnnotationGenehomologyHasHomologueses() {
		return this.enzymesAnnotationGenehomologyHasHomologueses;
	}

	public void setEnzymesAnnotationGenehomologyHasHomologueses(
			Set<EnzymesAnnotationGenehomologyHasHomologues> enzymesAnnotationGenehomologyHasHomologueses) {
		this.enzymesAnnotationGenehomologyHasHomologueses = enzymesAnnotationGenehomologyHasHomologueses;
	}

}
