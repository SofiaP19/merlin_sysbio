package hibernate.merlin_hibernate.entities;
// Generated 18/mai/2018 12:30:24 by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * EnzymesAnnotationGenehomology generated by hbm2java
 */
@Entity
@Table(name = "enzymes_annotation_genehomology", catalog = "sysbio_model")
public class EnzymesAnnotationGenehomology implements java.io.Serializable {

	private Integer SKey;
	private EnzymesAnnotationHomologysetup enzymesAnnotationHomologysetup;
	private String locusTag;
	private String query;
	private String gene;
	private String chromosome;
	private String organelle;
	private Boolean uniprotStar;
	private String status;
	private String uniprotEcnumber;
	private Set<EnzymesAnnotationFastasequence> enzymesAnnotationFastasequences = new HashSet<EnzymesAnnotationFastasequence>(
			0);
	private Set<EnzymesAnnotationProductrank> enzymesAnnotationProductranks = new HashSet<EnzymesAnnotationProductrank>(
			0);
	private Set<EnzymesAnnotationEcnumberrank> enzymesAnnotationEcnumberranks = new HashSet<EnzymesAnnotationEcnumberrank>(
			0);
	private Set<EnzymesAnnotationGenehomologyHasHomologues> enzymesAnnotationGenehomologyHasHomologueses = new HashSet<EnzymesAnnotationGenehomologyHasHomologues>(
			0);

	public EnzymesAnnotationGenehomology() {
	}

	public EnzymesAnnotationGenehomology(EnzymesAnnotationHomologysetup enzymesAnnotationHomologysetup) {
		this.enzymesAnnotationHomologysetup = enzymesAnnotationHomologysetup;
	}

	public EnzymesAnnotationGenehomology(EnzymesAnnotationHomologysetup enzymesAnnotationHomologysetup, String locusTag,
			String query, String gene, String chromosome, String organelle, Boolean uniprotStar, String status,
			String uniprotEcnumber, Set<EnzymesAnnotationFastasequence> enzymesAnnotationFastasequences,
			Set<EnzymesAnnotationProductrank> enzymesAnnotationProductranks,
			Set<EnzymesAnnotationEcnumberrank> enzymesAnnotationEcnumberranks,
			Set<EnzymesAnnotationGenehomologyHasHomologues> enzymesAnnotationGenehomologyHasHomologueses) {
		this.enzymesAnnotationHomologysetup = enzymesAnnotationHomologysetup;
		this.locusTag = locusTag;
		this.query = query;
		this.gene = gene;
		this.chromosome = chromosome;
		this.organelle = organelle;
		this.uniprotStar = uniprotStar;
		this.status = status;
		this.uniprotEcnumber = uniprotEcnumber;
		this.enzymesAnnotationFastasequences = enzymesAnnotationFastasequences;
		this.enzymesAnnotationProductranks = enzymesAnnotationProductranks;
		this.enzymesAnnotationEcnumberranks = enzymesAnnotationEcnumberranks;
		this.enzymesAnnotationGenehomologyHasHomologueses = enzymesAnnotationGenehomologyHasHomologueses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "s_key", unique = true, nullable = false)
	public Integer getSKey() {
		return this.SKey;
	}

	public void setSKey(Integer SKey) {
		this.SKey = SKey;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "homologySetup_s_key", nullable = false)
	public EnzymesAnnotationHomologysetup getEnzymesAnnotationHomologysetup() {
		return this.enzymesAnnotationHomologysetup;
	}

	public void setEnzymesAnnotationHomologysetup(EnzymesAnnotationHomologysetup enzymesAnnotationHomologysetup) {
		this.enzymesAnnotationHomologysetup = enzymesAnnotationHomologysetup;
	}

	@Column(name = "locusTag", length = 100)
	public String getLocusTag() {
		return this.locusTag;
	}

	public void setLocusTag(String locusTag) {
		this.locusTag = locusTag;
	}

	@Column(name = "query", length = 45)
	public String getQuery() {
		return this.query;
	}

	public void setQuery(String query) {
		this.query = query;
	}

	@Column(name = "gene", length = 45)
	public String getGene() {
		return this.gene;
	}

	public void setGene(String gene) {
		this.gene = gene;
	}

	@Column(name = "chromosome", length = 20)
	public String getChromosome() {
		return this.chromosome;
	}

	public void setChromosome(String chromosome) {
		this.chromosome = chromosome;
	}

	@Column(name = "organelle", length = 45)
	public String getOrganelle() {
		return this.organelle;
	}

	public void setOrganelle(String organelle) {
		this.organelle = organelle;
	}

	@Column(name = "uniprot_star")
	public Boolean getUniprotStar() {
		return this.uniprotStar;
	}

	public void setUniprotStar(Boolean uniprotStar) {
		this.uniprotStar = uniprotStar;
	}

	@Column(name = "status", length = 45)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "uniprot_ecnumber", length = 150)
	public String getUniprotEcnumber() {
		return this.uniprotEcnumber;
	}

	public void setUniprotEcnumber(String uniprotEcnumber) {
		this.uniprotEcnumber = uniprotEcnumber;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "enzymesAnnotationGenehomology")
	public Set<EnzymesAnnotationFastasequence> getEnzymesAnnotationFastasequences() {
		return this.enzymesAnnotationFastasequences;
	}

	public void setEnzymesAnnotationFastasequences(
			Set<EnzymesAnnotationFastasequence> enzymesAnnotationFastasequences) {
		this.enzymesAnnotationFastasequences = enzymesAnnotationFastasequences;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "enzymesAnnotationGenehomology")
	public Set<EnzymesAnnotationProductrank> getEnzymesAnnotationProductranks() {
		return this.enzymesAnnotationProductranks;
	}

	public void setEnzymesAnnotationProductranks(Set<EnzymesAnnotationProductrank> enzymesAnnotationProductranks) {
		this.enzymesAnnotationProductranks = enzymesAnnotationProductranks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "enzymesAnnotationGenehomology")
	public Set<EnzymesAnnotationEcnumberrank> getEnzymesAnnotationEcnumberranks() {
		return this.enzymesAnnotationEcnumberranks;
	}

	public void setEnzymesAnnotationEcnumberranks(Set<EnzymesAnnotationEcnumberrank> enzymesAnnotationEcnumberranks) {
		this.enzymesAnnotationEcnumberranks = enzymesAnnotationEcnumberranks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "enzymesAnnotationGenehomology")
	public Set<EnzymesAnnotationGenehomologyHasHomologues> getEnzymesAnnotationGenehomologyHasHomologueses() {
		return this.enzymesAnnotationGenehomologyHasHomologueses;
	}

	public void setEnzymesAnnotationGenehomologyHasHomologueses(
			Set<EnzymesAnnotationGenehomologyHasHomologues> enzymesAnnotationGenehomologyHasHomologueses) {
		this.enzymesAnnotationGenehomologyHasHomologueses = enzymesAnnotationGenehomologyHasHomologueses;
	}

}
