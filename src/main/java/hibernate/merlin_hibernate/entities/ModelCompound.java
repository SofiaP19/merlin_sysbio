package hibernate.merlin_hibernate.entities;
// Generated 18/mai/2018 12:30:24 by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ModelCompound generated by hbm2java
 */
@Entity
@Table(name = "model_compound", catalog = "test_hibernate")
public class ModelCompound implements java.io.Serializable {

	private Integer idcompound;
	private String name;
	private String inchi;
	private String keggId;
	private String entryType;
	private String formula;
	private String molecularWeight;
	private String neutralFormula;
	private Short charge;
	private String smiles;
	private Boolean hasBiologicalRoles;
	private Set<ModelExperimentSubstrateAffinity> modelExperimentSubstrateAffinities = new HashSet<ModelExperimentSubstrateAffinity>(
			0);
	private Set<ModelProtein> modelProteins = new HashSet<ModelProtein>(0);
	private Set<ModelModule> modelModules = new HashSet<ModelModule>(0);
	private Set<ModelCompound> modelCompoundsForMetaboliteId = new HashSet<ModelCompound>(0);
	private Set<ModelExperimentTurnoverNumber> modelExperimentTurnoverNumbers = new HashSet<ModelExperimentTurnoverNumber>(
			0);
	private Set<ModelEnzymaticCofactor> modelEnzymaticCofactors = new HashSet<ModelEnzymaticCofactor>(0);
	private Set<ModelMetabolicRegulation> modelMetabolicRegulations = new HashSet<ModelMetabolicRegulation>(0);
	private Set<ModelFunctionalParameter> modelFunctionalParameters = new HashSet<ModelFunctionalParameter>(0);
	private Set<ModelEnzymaticAlternativeCofactor> modelEnzymaticAlternativeCofactors = new HashSet<ModelEnzymaticAlternativeCofactor>(
			0);
	private Set<ModelStoichiometry> modelStoichiometries = new HashSet<ModelStoichiometry>(0);
	private Set<ModelSubstrateAffinity> modelSubstrateAffinities = new HashSet<ModelSubstrateAffinity>(0);
	private Set<ModelExperimentInhibitor> modelExperimentInhibitors = new HashSet<ModelExperimentInhibitor>(0);
	private Set<ModelPathway> modelPathways = new HashSet<ModelPathway>(0);
	private Set<ModelCompound> modelCompoundsForSimilarMetaboliteId = new HashSet<ModelCompound>(0);

	public ModelCompound() {
	}

	public ModelCompound(String name, String inchi, String keggId, String entryType, String formula,
			String molecularWeight, String neutralFormula, Short charge, String smiles, Boolean hasBiologicalRoles,
			Set<ModelExperimentSubstrateAffinity> modelExperimentSubstrateAffinities, Set<ModelProtein> modelProteins,
			Set<ModelModule> modelModules, Set<ModelCompound> modelCompoundsForMetaboliteId,
			Set<ModelExperimentTurnoverNumber> modelExperimentTurnoverNumbers,
			Set<ModelEnzymaticCofactor> modelEnzymaticCofactors,
			Set<ModelMetabolicRegulation> modelMetabolicRegulations,
			Set<ModelFunctionalParameter> modelFunctionalParameters,
			Set<ModelEnzymaticAlternativeCofactor> modelEnzymaticAlternativeCofactors,
			Set<ModelStoichiometry> modelStoichiometries, Set<ModelSubstrateAffinity> modelSubstrateAffinities,
			Set<ModelExperimentInhibitor> modelExperimentInhibitors, Set<ModelPathway> modelPathways,
			Set<ModelCompound> modelCompoundsForSimilarMetaboliteId) {
		this.name = name;
		this.inchi = inchi;
		this.keggId = keggId;
		this.entryType = entryType;
		this.formula = formula;
		this.molecularWeight = molecularWeight;
		this.neutralFormula = neutralFormula;
		this.charge = charge;
		this.smiles = smiles;
		this.hasBiologicalRoles = hasBiologicalRoles;
		this.modelExperimentSubstrateAffinities = modelExperimentSubstrateAffinities;
		this.modelProteins = modelProteins;
		this.modelModules = modelModules;
		this.modelCompoundsForMetaboliteId = modelCompoundsForMetaboliteId;
		this.modelExperimentTurnoverNumbers = modelExperimentTurnoverNumbers;
		this.modelEnzymaticCofactors = modelEnzymaticCofactors;
		this.modelMetabolicRegulations = modelMetabolicRegulations;
		this.modelFunctionalParameters = modelFunctionalParameters;
		this.modelEnzymaticAlternativeCofactors = modelEnzymaticAlternativeCofactors;
		this.modelStoichiometries = modelStoichiometries;
		this.modelSubstrateAffinities = modelSubstrateAffinities;
		this.modelExperimentInhibitors = modelExperimentInhibitors;
		this.modelPathways = modelPathways;
		this.modelCompoundsForSimilarMetaboliteId = modelCompoundsForSimilarMetaboliteId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idcompound", unique = true, nullable = false)
	public Integer getIdcompound() {
		return this.idcompound;
	}

	public void setIdcompound(Integer idcompound) {
		this.idcompound = idcompound;
	}

	@Column(name = "name", length = 400)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "inchi", length = 1500)
	public String getInchi() {
		return this.inchi;
	}

	public void setInchi(String inchi) {
		this.inchi = inchi;
	}

	@Column(name = "kegg_id", length = 15)
	public String getKeggId() {
		return this.keggId;
	}

	public void setKeggId(String keggId) {
		this.keggId = keggId;
	}

	@Column(name = "entry_type", length = 9)
	public String getEntryType() {
		return this.entryType;
	}

	public void setEntryType(String entryType) {
		this.entryType = entryType;
	}

	@Column(name = "formula", length = 65535)
	public String getFormula() {
		return this.formula;
	}

	public void setFormula(String formula) {
		this.formula = formula;
	}

	@Column(name = "molecular_weight", length = 100)
	public String getMolecularWeight() {
		return this.molecularWeight;
	}

	public void setMolecularWeight(String molecularWeight) {
		this.molecularWeight = molecularWeight;
	}

	@Column(name = "neutral_formula", length = 120)
	public String getNeutralFormula() {
		return this.neutralFormula;
	}

	public void setNeutralFormula(String neutralFormula) {
		this.neutralFormula = neutralFormula;
	}

	@Column(name = "charge")
	public Short getCharge() {
		return this.charge;
	}

	public void setCharge(Short charge) {
		this.charge = charge;
	}

	@Column(name = "smiles", length = 1200)
	public String getSmiles() {
		return this.smiles;
	}

	public void setSmiles(String smiles) {
		this.smiles = smiles;
	}

	@Column(name = "hasBiologicalRoles")
	public Boolean getHasBiologicalRoles() {
		return this.hasBiologicalRoles;
	}

	public void setHasBiologicalRoles(Boolean hasBiologicalRoles) {
		this.hasBiologicalRoles = hasBiologicalRoles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelCompound")
	public Set<ModelExperimentSubstrateAffinity> getModelExperimentSubstrateAffinities() {
		return this.modelExperimentSubstrateAffinities;
	}

	public void setModelExperimentSubstrateAffinities(
			Set<ModelExperimentSubstrateAffinity> modelExperimentSubstrateAffinities) {
		this.modelExperimentSubstrateAffinities = modelExperimentSubstrateAffinities;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_effector", catalog = "test_hibernate", joinColumns = {
			@JoinColumn(name = "compound_idcompound", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "protein_idprotein", nullable = false, updatable = false) })
	public Set<ModelProtein> getModelProteins() {
		return this.modelProteins;
	}

	public void setModelProteins(Set<ModelProtein> modelProteins) {
		this.modelProteins = modelProteins;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_modules_has_compound", catalog = "test_hibernate", joinColumns = {
			@JoinColumn(name = "compound_idcompound", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "modules_id", nullable = false, updatable = false) })
	public Set<ModelModule> getModelModules() {
		return this.modelModules;
	}

	public void setModelModules(Set<ModelModule> modelModules) {
		this.modelModules = modelModules;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_same_as", catalog = "test_hibernate", joinColumns = {
			@JoinColumn(name = "similar_metabolite_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "metabolite_id", nullable = false, updatable = false) })
	public Set<ModelCompound> getModelCompoundsForMetaboliteId() {
		return this.modelCompoundsForMetaboliteId;
	}

	public void setModelCompoundsForMetaboliteId(Set<ModelCompound> modelCompoundsForMetaboliteId) {
		this.modelCompoundsForMetaboliteId = modelCompoundsForMetaboliteId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelCompound")
	public Set<ModelExperimentTurnoverNumber> getModelExperimentTurnoverNumbers() {
		return this.modelExperimentTurnoverNumbers;
	}

	public void setModelExperimentTurnoverNumbers(Set<ModelExperimentTurnoverNumber> modelExperimentTurnoverNumbers) {
		this.modelExperimentTurnoverNumbers = modelExperimentTurnoverNumbers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelCompound")
	public Set<ModelEnzymaticCofactor> getModelEnzymaticCofactors() {
		return this.modelEnzymaticCofactors;
	}

	public void setModelEnzymaticCofactors(Set<ModelEnzymaticCofactor> modelEnzymaticCofactors) {
		this.modelEnzymaticCofactors = modelEnzymaticCofactors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelCompound")
	public Set<ModelMetabolicRegulation> getModelMetabolicRegulations() {
		return this.modelMetabolicRegulations;
	}

	public void setModelMetabolicRegulations(Set<ModelMetabolicRegulation> modelMetabolicRegulations) {
		this.modelMetabolicRegulations = modelMetabolicRegulations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelCompound")
	public Set<ModelFunctionalParameter> getModelFunctionalParameters() {
		return this.modelFunctionalParameters;
	}

	public void setModelFunctionalParameters(Set<ModelFunctionalParameter> modelFunctionalParameters) {
		this.modelFunctionalParameters = modelFunctionalParameters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelCompound")
	public Set<ModelEnzymaticAlternativeCofactor> getModelEnzymaticAlternativeCofactors() {
		return this.modelEnzymaticAlternativeCofactors;
	}

	public void setModelEnzymaticAlternativeCofactors(
			Set<ModelEnzymaticAlternativeCofactor> modelEnzymaticAlternativeCofactors) {
		this.modelEnzymaticAlternativeCofactors = modelEnzymaticAlternativeCofactors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelCompound")
	public Set<ModelStoichiometry> getModelStoichiometries() {
		return this.modelStoichiometries;
	}

	public void setModelStoichiometries(Set<ModelStoichiometry> modelStoichiometries) {
		this.modelStoichiometries = modelStoichiometries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelCompound")
	public Set<ModelSubstrateAffinity> getModelSubstrateAffinities() {
		return this.modelSubstrateAffinities;
	}

	public void setModelSubstrateAffinities(Set<ModelSubstrateAffinity> modelSubstrateAffinities) {
		this.modelSubstrateAffinities = modelSubstrateAffinities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelCompound")
	public Set<ModelExperimentInhibitor> getModelExperimentInhibitors() {
		return this.modelExperimentInhibitors;
	}

	public void setModelExperimentInhibitors(Set<ModelExperimentInhibitor> modelExperimentInhibitors) {
		this.modelExperimentInhibitors = modelExperimentInhibitors;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_pathway_has_compound", catalog = "test_hibernate", joinColumns = {
			@JoinColumn(name = "compound_idcompound", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "pathway_idpathway", nullable = false, updatable = false) })
	public Set<ModelPathway> getModelPathways() {
		return this.modelPathways;
	}

	public void setModelPathways(Set<ModelPathway> modelPathways) {
		this.modelPathways = modelPathways;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_same_as", catalog = "test_hibernate", joinColumns = {
			@JoinColumn(name = "metabolite_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "similar_metabolite_id", nullable = false, updatable = false) })
	public Set<ModelCompound> getModelCompoundsForSimilarMetaboliteId() {
		return this.modelCompoundsForSimilarMetaboliteId;
	}

	public void setModelCompoundsForSimilarMetaboliteId(Set<ModelCompound> modelCompoundsForSimilarMetaboliteId) {
		this.modelCompoundsForSimilarMetaboliteId = modelCompoundsForSimilarMetaboliteId;
	}

}
