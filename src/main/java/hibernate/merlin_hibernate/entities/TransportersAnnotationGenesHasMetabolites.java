package hibernate.merlin_hibernate.entities;
// Generated 18/mai/2018 12:30:24 by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TransportersAnnotationGenesHasMetabolites generated by hbm2java
 */
@Entity
@Table(name = "transporters_annotation_genes_has_metabolites", catalog = "test_hibernate")
public class TransportersAnnotationGenesHasMetabolites implements java.io.Serializable {

	private TransportersAnnotationGenesHasMetabolitesId id;
	private TransportersAnnotationGenes transportersAnnotationGenes;
	private TransportersAnnotationMetabolites transportersAnnotationMetabolites;
	private float similarityScoreSum;
	private float taxonomyScoreSum;
	private int frequency;
	private Set<TransportersAnnotationGenesHasMetabolitesHasType> transportersAnnotationGenesHasMetabolitesHasTypes = new HashSet<TransportersAnnotationGenesHasMetabolitesHasType>(
			0);

	public TransportersAnnotationGenesHasMetabolites() {
	}

	public TransportersAnnotationGenesHasMetabolites(TransportersAnnotationGenesHasMetabolitesId id,
			TransportersAnnotationGenes transportersAnnotationGenes,
			TransportersAnnotationMetabolites transportersAnnotationMetabolites, float similarityScoreSum,
			float taxonomyScoreSum, int frequency) {
		this.id = id;
		this.transportersAnnotationGenes = transportersAnnotationGenes;
		this.transportersAnnotationMetabolites = transportersAnnotationMetabolites;
		this.similarityScoreSum = similarityScoreSum;
		this.taxonomyScoreSum = taxonomyScoreSum;
		this.frequency = frequency;
	}

	public TransportersAnnotationGenesHasMetabolites(TransportersAnnotationGenesHasMetabolitesId id,
			TransportersAnnotationGenes transportersAnnotationGenes,
			TransportersAnnotationMetabolites transportersAnnotationMetabolites, float similarityScoreSum,
			float taxonomyScoreSum, int frequency,
			Set<TransportersAnnotationGenesHasMetabolitesHasType> transportersAnnotationGenesHasMetabolitesHasTypes) {
		this.id = id;
		this.transportersAnnotationGenes = transportersAnnotationGenes;
		this.transportersAnnotationMetabolites = transportersAnnotationMetabolites;
		this.similarityScoreSum = similarityScoreSum;
		this.taxonomyScoreSum = taxonomyScoreSum;
		this.frequency = frequency;
		this.transportersAnnotationGenesHasMetabolitesHasTypes = transportersAnnotationGenesHasMetabolitesHasTypes;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "geneId", column = @Column(name = "gene_id", nullable = false)),
			@AttributeOverride(name = "metaboliteId", column = @Column(name = "metabolite_id", nullable = false)) })
	public TransportersAnnotationGenesHasMetabolitesId getId() {
		return this.id;
	}

	public void setId(TransportersAnnotationGenesHasMetabolitesId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "gene_id", nullable = false, insertable = false, updatable = false)
	public TransportersAnnotationGenes getTransportersAnnotationGenes() {
		return this.transportersAnnotationGenes;
	}

	public void setTransportersAnnotationGenes(TransportersAnnotationGenes transportersAnnotationGenes) {
		this.transportersAnnotationGenes = transportersAnnotationGenes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "metabolite_id", nullable = false, insertable = false, updatable = false)
	public TransportersAnnotationMetabolites getTransportersAnnotationMetabolites() {
		return this.transportersAnnotationMetabolites;
	}

	public void setTransportersAnnotationMetabolites(
			TransportersAnnotationMetabolites transportersAnnotationMetabolites) {
		this.transportersAnnotationMetabolites = transportersAnnotationMetabolites;
	}

	@Column(name = "similarity_score_sum", nullable = false, precision = 12, scale = 0)
	public float getSimilarityScoreSum() {
		return this.similarityScoreSum;
	}

	public void setSimilarityScoreSum(float similarityScoreSum) {
		this.similarityScoreSum = similarityScoreSum;
	}

	@Column(name = "taxonomy_score_sum", nullable = false, precision = 12, scale = 0)
	public float getTaxonomyScoreSum() {
		return this.taxonomyScoreSum;
	}

	public void setTaxonomyScoreSum(float taxonomyScoreSum) {
		this.taxonomyScoreSum = taxonomyScoreSum;
	}

	@Column(name = "frequency", nullable = false)
	public int getFrequency() {
		return this.frequency;
	}

	public void setFrequency(int frequency) {
		this.frequency = frequency;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transportersAnnotationGenesHasMetabolites")
	public Set<TransportersAnnotationGenesHasMetabolitesHasType> getTransportersAnnotationGenesHasMetabolitesHasTypes() {
		return this.transportersAnnotationGenesHasMetabolitesHasTypes;
	}

	public void setTransportersAnnotationGenesHasMetabolitesHasTypes(
			Set<TransportersAnnotationGenesHasMetabolitesHasType> transportersAnnotationGenesHasMetabolitesHasTypes) {
		this.transportersAnnotationGenesHasMetabolitesHasTypes = transportersAnnotationGenesHasMetabolitesHasTypes;
	}

}
