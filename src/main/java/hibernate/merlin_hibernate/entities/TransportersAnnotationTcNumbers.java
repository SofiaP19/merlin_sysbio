package hibernate.merlin_hibernate.entities;
// Generated 18/mai/2018 12:30:24 by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TransportersAnnotationTcNumbers generated by hbm2java
 */
@Entity
@Table(name = "transporters_annotation_tc_numbers", catalog = "sysbio_model")
public class TransportersAnnotationTcNumbers implements java.io.Serializable {

	private TransportersAnnotationTcNumbersId id;
	private TransportersAnnotationGeneralEquation transportersAnnotationGeneralEquation;
	private TransportersAnnotationTaxonomyData transportersAnnotationTaxonomyData;
	private String tcFamily;
	private String tcLocation;
	private String affinity;
	private Set<TransportersAnnotationTransportSystems> transportersAnnotationTransportSystemses = new HashSet<TransportersAnnotationTransportSystems>(
			0);
	private Set<TransportersAnnotationTcdbRegistries> transportersAnnotationTcdbRegistrieses = new HashSet<TransportersAnnotationTcdbRegistries>(
			0);

	public TransportersAnnotationTcNumbers() {
	}

	public TransportersAnnotationTcNumbers(TransportersAnnotationTcNumbersId id,
			TransportersAnnotationGeneralEquation transportersAnnotationGeneralEquation,
			TransportersAnnotationTaxonomyData transportersAnnotationTaxonomyData, String tcFamily) {
		this.id = id;
		this.transportersAnnotationGeneralEquation = transportersAnnotationGeneralEquation;
		this.transportersAnnotationTaxonomyData = transportersAnnotationTaxonomyData;
		this.tcFamily = tcFamily;
	}

	public TransportersAnnotationTcNumbers(TransportersAnnotationTcNumbersId id,
			TransportersAnnotationGeneralEquation transportersAnnotationGeneralEquation,
			TransportersAnnotationTaxonomyData transportersAnnotationTaxonomyData, String tcFamily, String tcLocation,
			String affinity, Set<TransportersAnnotationTransportSystems> transportersAnnotationTransportSystemses,
			Set<TransportersAnnotationTcdbRegistries> transportersAnnotationTcdbRegistrieses) {
		this.id = id;
		this.transportersAnnotationGeneralEquation = transportersAnnotationGeneralEquation;
		this.transportersAnnotationTaxonomyData = transportersAnnotationTaxonomyData;
		this.tcFamily = tcFamily;
		this.tcLocation = tcLocation;
		this.affinity = affinity;
		this.transportersAnnotationTransportSystemses = transportersAnnotationTransportSystemses;
		this.transportersAnnotationTcdbRegistrieses = transportersAnnotationTcdbRegistrieses;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "tcNumber", column = @Column(name = "tc_number", nullable = false, length = 45)),
			@AttributeOverride(name = "tcVersion", column = @Column(name = "tc_version", nullable = false)) })
	public TransportersAnnotationTcNumbersId getId() {
		return this.id;
	}

	public void setId(TransportersAnnotationTcNumbersId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "general_equation_id", nullable = false)
	public TransportersAnnotationGeneralEquation getTransportersAnnotationGeneralEquation() {
		return this.transportersAnnotationGeneralEquation;
	}

	public void setTransportersAnnotationGeneralEquation(
			TransportersAnnotationGeneralEquation transportersAnnotationGeneralEquation) {
		this.transportersAnnotationGeneralEquation = transportersAnnotationGeneralEquation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "taxonomy_data_id", nullable = false)
	public TransportersAnnotationTaxonomyData getTransportersAnnotationTaxonomyData() {
		return this.transportersAnnotationTaxonomyData;
	}

	public void setTransportersAnnotationTaxonomyData(
			TransportersAnnotationTaxonomyData transportersAnnotationTaxonomyData) {
		this.transportersAnnotationTaxonomyData = transportersAnnotationTaxonomyData;
	}

	@Column(name = "tc_family", nullable = false, length = 45)
	public String getTcFamily() {
		return this.tcFamily;
	}

	public void setTcFamily(String tcFamily) {
		this.tcFamily = tcFamily;
	}

	@Column(name = "tc_location", length = 45)
	public String getTcLocation() {
		return this.tcLocation;
	}

	public void setTcLocation(String tcLocation) {
		this.tcLocation = tcLocation;
	}

	@Column(name = "affinity", length = 45)
	public String getAffinity() {
		return this.affinity;
	}

	public void setAffinity(String affinity) {
		this.affinity = affinity;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "transporters_annotation_tc_numbers_has_transport_systems", catalog = "sysbio_model", joinColumns = {
			@JoinColumn(name = "tc_number", nullable = false, updatable = false),
			@JoinColumn(name = "tc_version", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "transport_system_id", nullable = false, updatable = false) })
	public Set<TransportersAnnotationTransportSystems> getTransportersAnnotationTransportSystemses() {
		return this.transportersAnnotationTransportSystemses;
	}

	public void setTransportersAnnotationTransportSystemses(
			Set<TransportersAnnotationTransportSystems> transportersAnnotationTransportSystemses) {
		this.transportersAnnotationTransportSystemses = transportersAnnotationTransportSystemses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transportersAnnotationTcNumbers")
	public Set<TransportersAnnotationTcdbRegistries> getTransportersAnnotationTcdbRegistrieses() {
		return this.transportersAnnotationTcdbRegistrieses;
	}

	public void setTransportersAnnotationTcdbRegistrieses(
			Set<TransportersAnnotationTcdbRegistries> transportersAnnotationTcdbRegistrieses) {
		this.transportersAnnotationTcdbRegistrieses = transportersAnnotationTcdbRegistrieses;
	}

}
