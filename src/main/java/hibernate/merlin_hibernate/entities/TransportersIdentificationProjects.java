package hibernate.merlin_hibernate.entities;
// Generated 18/mai/2018 12:30:24 by Hibernate Tools 5.2.8.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * TransportersIdentificationProjects generated by hbm2java
 */
@Entity
@Table(name = "transporters_identification_projects", catalog = "sysbio_model")
public class TransportersIdentificationProjects implements java.io.Serializable {

	private Integer id;
	private int version;
	private int organismId;
	private boolean latestVersion;
	private Date date;
	private Set<TransportersIdentificationSwReports> transportersIdentificationSwReportses = new HashSet<TransportersIdentificationSwReports>(
			0);
	private Set<CompartmentsAnnotationPsortReports> compartmentsAnnotationPsortReportses = new HashSet<CompartmentsAnnotationPsortReports>(
			0);

	public TransportersIdentificationProjects() {
	}

	public TransportersIdentificationProjects(int organismId, boolean latestVersion, Date date) {
		this.organismId = organismId;
		this.latestVersion = latestVersion;
		this.date = date;
	}

	public TransportersIdentificationProjects(int organismId, boolean latestVersion, Date date,
			Set<TransportersIdentificationSwReports> transportersIdentificationSwReportses,
			Set<CompartmentsAnnotationPsortReports> compartmentsAnnotationPsortReportses) {
		this.organismId = organismId;
		this.latestVersion = latestVersion;
		this.date = date;
		this.transportersIdentificationSwReportses = transportersIdentificationSwReportses;
		this.compartmentsAnnotationPsortReportses = compartmentsAnnotationPsortReportses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Version
	@Column(name = "version", nullable = false)
	public int getVersion() {
		return this.version;
	}

	public void setVersion(int version) {
		this.version = version;
	}

	@Column(name = "organism_id", nullable = false)
	public int getOrganismId() {
		return this.organismId;
	}

	public void setOrganismId(int organismId) {
		this.organismId = organismId;
	}

	@Column(name = "latest_version", nullable = false)
	public boolean isLatestVersion() {
		return this.latestVersion;
	}

	public void setLatestVersion(boolean latestVersion) {
		this.latestVersion = latestVersion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date", nullable = false, length = 19)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transportersIdentificationProjects")
	public Set<TransportersIdentificationSwReports> getTransportersIdentificationSwReportses() {
		return this.transportersIdentificationSwReportses;
	}

	public void setTransportersIdentificationSwReportses(
			Set<TransportersIdentificationSwReports> transportersIdentificationSwReportses) {
		this.transportersIdentificationSwReportses = transportersIdentificationSwReportses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transportersIdentificationProjects")
	public Set<CompartmentsAnnotationPsortReports> getCompartmentsAnnotationPsortReportses() {
		return this.compartmentsAnnotationPsortReportses;
	}

	public void setCompartmentsAnnotationPsortReportses(
			Set<CompartmentsAnnotationPsortReports> compartmentsAnnotationPsortReportses) {
		this.compartmentsAnnotationPsortReportses = compartmentsAnnotationPsortReportses;
	}

}
