package hibernate.merlin_hibernate.entities;
// Generated 18/mai/2018 12:30:24 by Hibernate Tools 5.2.8.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * CompartmentsAnnotationPsortReportsHasCompartments generated by hbm2java
 */
@Entity
@Table(name = "compartments_annotation_psort_reports_has_compartments", catalog = "test_hibernate")
public class CompartmentsAnnotationPsortReportsHasCompartments implements java.io.Serializable {

	private CompartmentsAnnotationPsortReportsHasCompartmentsId id;
	private CompartmentsAnnotationCompartments compartmentsAnnotationCompartments;
	private CompartmentsAnnotationPsortReports compartmentsAnnotationPsortReports;
	private Float score;

	public CompartmentsAnnotationPsortReportsHasCompartments() {
	}

	public CompartmentsAnnotationPsortReportsHasCompartments(CompartmentsAnnotationPsortReportsHasCompartmentsId id,
			CompartmentsAnnotationCompartments compartmentsAnnotationCompartments,
			CompartmentsAnnotationPsortReports compartmentsAnnotationPsortReports) {
		this.id = id;
		this.compartmentsAnnotationCompartments = compartmentsAnnotationCompartments;
		this.compartmentsAnnotationPsortReports = compartmentsAnnotationPsortReports;
	}

	public CompartmentsAnnotationPsortReportsHasCompartments(CompartmentsAnnotationPsortReportsHasCompartmentsId id,
			CompartmentsAnnotationCompartments compartmentsAnnotationCompartments,
			CompartmentsAnnotationPsortReports compartmentsAnnotationPsortReports, Float score) {
		this.id = id;
		this.compartmentsAnnotationCompartments = compartmentsAnnotationCompartments;
		this.compartmentsAnnotationPsortReports = compartmentsAnnotationPsortReports;
		this.score = score;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "psortReportId", column = @Column(name = "psort_report_id", nullable = false)),
			@AttributeOverride(name = "compartmentId", column = @Column(name = "compartment_id", nullable = false)) })
	public CompartmentsAnnotationPsortReportsHasCompartmentsId getId() {
		return this.id;
	}

	public void setId(CompartmentsAnnotationPsortReportsHasCompartmentsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "compartment_id", nullable = false, insertable = false, updatable = false)
	public CompartmentsAnnotationCompartments getCompartmentsAnnotationCompartments() {
		return this.compartmentsAnnotationCompartments;
	}

	public void setCompartmentsAnnotationCompartments(
			CompartmentsAnnotationCompartments compartmentsAnnotationCompartments) {
		this.compartmentsAnnotationCompartments = compartmentsAnnotationCompartments;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "psort_report_id", nullable = false, insertable = false, updatable = false)
	public CompartmentsAnnotationPsortReports getCompartmentsAnnotationPsortReports() {
		return this.compartmentsAnnotationPsortReports;
	}

	public void setCompartmentsAnnotationPsortReports(
			CompartmentsAnnotationPsortReports compartmentsAnnotationPsortReports) {
		this.compartmentsAnnotationPsortReports = compartmentsAnnotationPsortReports;
	}

	@Column(name = "score", precision = 12, scale = 0)
	public Float getScore() {
		return this.score;
	}

	public void setScore(Float score) {
		this.score = score;
	}

}
