package hibernate.merlin_hibernate.entities;
// Generated 18/mai/2018 12:30:24 by Hibernate Tools 5.2.8.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * TransportersAnnotationTransportedMetabolitesDirections generated by hbm2java
 */
@Entity
@Table(name = "transporters_annotation_transported_metabolites_directions", catalog = "sysbio_model")
public class TransportersAnnotationTransportedMetabolitesDirections implements java.io.Serializable {

	private TransportersAnnotationTransportedMetabolitesDirectionsId id;
	private TransportersAnnotationDirections transportersAnnotationDirections;
	private TransportersAnnotationMetabolites transportersAnnotationMetabolites;
	private TransportersAnnotationTransportSystems transportersAnnotationTransportSystems;
	private int stoichiometry;

	public TransportersAnnotationTransportedMetabolitesDirections() {
	}

	public TransportersAnnotationTransportedMetabolitesDirections(
			TransportersAnnotationTransportedMetabolitesDirectionsId id,
			TransportersAnnotationDirections transportersAnnotationDirections,
			TransportersAnnotationMetabolites transportersAnnotationMetabolites,
			TransportersAnnotationTransportSystems transportersAnnotationTransportSystems, int stoichiometry) {
		this.id = id;
		this.transportersAnnotationDirections = transportersAnnotationDirections;
		this.transportersAnnotationMetabolites = transportersAnnotationMetabolites;
		this.transportersAnnotationTransportSystems = transportersAnnotationTransportSystems;
		this.stoichiometry = stoichiometry;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "metaboliteId", column = @Column(name = "metabolite_id", nullable = false)),
			@AttributeOverride(name = "directionId", column = @Column(name = "direction_id", nullable = false)),
			@AttributeOverride(name = "transportSystemId", column = @Column(name = "transport_system_id", nullable = false)) })
	public TransportersAnnotationTransportedMetabolitesDirectionsId getId() {
		return this.id;
	}

	public void setId(TransportersAnnotationTransportedMetabolitesDirectionsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "direction_id", nullable = false, insertable = false, updatable = false)
	public TransportersAnnotationDirections getTransportersAnnotationDirections() {
		return this.transportersAnnotationDirections;
	}

	public void setTransportersAnnotationDirections(TransportersAnnotationDirections transportersAnnotationDirections) {
		this.transportersAnnotationDirections = transportersAnnotationDirections;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "metabolite_id", nullable = false, insertable = false, updatable = false)
	public TransportersAnnotationMetabolites getTransportersAnnotationMetabolites() {
		return this.transportersAnnotationMetabolites;
	}

	public void setTransportersAnnotationMetabolites(
			TransportersAnnotationMetabolites transportersAnnotationMetabolites) {
		this.transportersAnnotationMetabolites = transportersAnnotationMetabolites;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "transport_system_id", nullable = false, insertable = false, updatable = false)
	public TransportersAnnotationTransportSystems getTransportersAnnotationTransportSystems() {
		return this.transportersAnnotationTransportSystems;
	}

	public void setTransportersAnnotationTransportSystems(
			TransportersAnnotationTransportSystems transportersAnnotationTransportSystems) {
		this.transportersAnnotationTransportSystems = transportersAnnotationTransportSystems;
	}

	@Column(name = "stoichiometry", nullable = false)
	public int getStoichiometry() {
		return this.stoichiometry;
	}

	public void setStoichiometry(int stoichiometry) {
		this.stoichiometry = stoichiometry;
	}

}
