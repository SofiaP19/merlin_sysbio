package hibernate.merlin_hibernate.entities;
// Generated 18/mai/2018 12:30:24 by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ModelOrthology generated by hbm2java
 */
@Entity
@Table(name = "model_orthology", catalog = "test_hibernate")
public class ModelOrthology implements java.io.Serializable {

	private Integer id;
	private String entryId;
	private String locusId;
	private Set<ModelGeneHasOrthology> modelGeneHasOrthologies = new HashSet<ModelGeneHasOrthology>(0);
	private Set<ModelModule> modelModules = new HashSet<ModelModule>(0);

	public ModelOrthology() {
	}

	public ModelOrthology(String entryId) {
		this.entryId = entryId;
	}

	public ModelOrthology(String entryId, String locusId, Set<ModelGeneHasOrthology> modelGeneHasOrthologies,
			Set<ModelModule> modelModules) {
		this.entryId = entryId;
		this.locusId = locusId;
		this.modelGeneHasOrthologies = modelGeneHasOrthologies;
		this.modelModules = modelModules;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "entry_id", nullable = false, length = 20)
	public String getEntryId() {
		return this.entryId;
	}

	public void setEntryId(String entryId) {
		this.entryId = entryId;
	}

	@Column(name = "locus_id", length = 45)
	public String getLocusId() {
		return this.locusId;
	}

	public void setLocusId(String locusId) {
		this.locusId = locusId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelOrthology")
	public Set<ModelGeneHasOrthology> getModelGeneHasOrthologies() {
		return this.modelGeneHasOrthologies;
	}

	public void setModelGeneHasOrthologies(Set<ModelGeneHasOrthology> modelGeneHasOrthologies) {
		this.modelGeneHasOrthologies = modelGeneHasOrthologies;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_module_has_orthology", catalog = "test_hibernate", joinColumns = {
			@JoinColumn(name = "orthology_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "module_id", nullable = false, updatable = false) })
	public Set<ModelModule> getModelModules() {
		return this.modelModules;
	}

	public void setModelModules(Set<ModelModule> modelModules) {
		this.modelModules = modelModules;
	}

}
