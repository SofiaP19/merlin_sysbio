package hibernate.merlin_hibernate.entities;
// Generated 18/mai/2018 12:30:24 by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * ModelPathway generated by hbm2java
 */
@Entity
@Table(name = "model_pathway", catalog = "sysbio_model")
public class ModelPathway implements java.io.Serializable {

	private Integer idpathway;
	private String code;
	private String name;
	private String pathSbmlFile;
	private byte[] image;
	private Set<ModelCompound> modelCompounds = new HashSet<ModelCompound>(0);
	private Set<ModelEnzyme> modelEnzymes = new HashSet<ModelEnzyme>(0);
	private Set<ModelReaction> modelReactions = new HashSet<ModelReaction>(0);
	private Set<ModelModule> modelModules = new HashSet<ModelModule>(0);
	private Set<ModelPathway> modelPathwaysForSuperpathway = new HashSet<ModelPathway>(0);
	private Set<ModelPathway> modelPathwaysForPathwayIdpathway = new HashSet<ModelPathway>(0);

	public ModelPathway() {
	}

	public ModelPathway(String code, String name) {
		this.code = code;
		this.name = name;
	}

	public ModelPathway(String code, String name, String pathSbmlFile, byte[] image, Set<ModelCompound> modelCompounds,
			Set<ModelEnzyme> modelEnzymes, Set<ModelReaction> modelReactions, Set<ModelModule> modelModules,
			Set<ModelPathway> modelPathwaysForSuperpathway, Set<ModelPathway> modelPathwaysForPathwayIdpathway) {
		this.code = code;
		this.name = name;
		this.pathSbmlFile = pathSbmlFile;
		this.image = image;
		this.modelCompounds = modelCompounds;
		this.modelEnzymes = modelEnzymes;
		this.modelReactions = modelReactions;
		this.modelModules = modelModules;
		this.modelPathwaysForSuperpathway = modelPathwaysForSuperpathway;
		this.modelPathwaysForPathwayIdpathway = modelPathwaysForPathwayIdpathway;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idpathway", unique = true, nullable = false)
	public Integer getIdpathway() {
		return this.idpathway;
	}

	public void setIdpathway(Integer idpathway) {
		this.idpathway = idpathway;
	}

	@Column(name = "code", nullable = false, length = 5)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "name", nullable = false, length = 120)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "path_sbml_file", length = 200)
	public String getPathSbmlFile() {
		return this.pathSbmlFile;
	}

	public void setPathSbmlFile(String pathSbmlFile) {
		this.pathSbmlFile = pathSbmlFile;
	}

	@Column(name = "image")
	public byte[] getImage() {
		return this.image;
	}

	public void setImage(byte[] image) {
		this.image = image;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_pathway_has_compound", catalog = "sysbio_model", joinColumns = {
			@JoinColumn(name = "pathway_idpathway", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "compound_idcompound", nullable = false, updatable = false) })
	public Set<ModelCompound> getModelCompounds() {
		return this.modelCompounds;
	}

	public void setModelCompounds(Set<ModelCompound> modelCompounds) {
		this.modelCompounds = modelCompounds;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_pathway_has_enzyme", catalog = "sysbio_model", joinColumns = {
			@JoinColumn(name = "pathway_idpathway", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "enzyme_ecnumber", nullable = false, updatable = false) })
	public Set<ModelEnzyme> getModelEnzymes() {
		return this.modelEnzymes;
	}

	public void setModelEnzymes(Set<ModelEnzyme> modelEnzymes) {
		this.modelEnzymes = modelEnzymes;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_pathway_has_reaction", catalog = "sysbio_model", joinColumns = {
			@JoinColumn(name = "pathway_idpathway", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "reaction_idreaction", nullable = false, updatable = false) })
	public Set<ModelReaction> getModelReactions() {
		return this.modelReactions;
	}

	public void setModelReactions(Set<ModelReaction> modelReactions) {
		this.modelReactions = modelReactions;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_pathway_has_module", catalog = "sysbio_model", joinColumns = {
			@JoinColumn(name = "pathway_idpathway", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "module_id", nullable = false, updatable = false) })
	public Set<ModelModule> getModelModules() {
		return this.modelModules;
	}

	public void setModelModules(Set<ModelModule> modelModules) {
		this.modelModules = modelModules;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_superpathway", catalog = "sysbio_model", joinColumns = {
			@JoinColumn(name = "pathway_idpathway", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "superpathway", nullable = false, updatable = false) })
	public Set<ModelPathway> getModelPathwaysForSuperpathway() {
		return this.modelPathwaysForSuperpathway;
	}

	public void setModelPathwaysForSuperpathway(Set<ModelPathway> modelPathwaysForSuperpathway) {
		this.modelPathwaysForSuperpathway = modelPathwaysForSuperpathway;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_superpathway", catalog = "sysbio_model", joinColumns = {
			@JoinColumn(name = "superpathway", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "pathway_idpathway", nullable = false, updatable = false) })
	public Set<ModelPathway> getModelPathwaysForPathwayIdpathway() {
		return this.modelPathwaysForPathwayIdpathway;
	}

	public void setModelPathwaysForPathwayIdpathway(Set<ModelPathway> modelPathwaysForPathwayIdpathway) {
		this.modelPathwaysForPathwayIdpathway = modelPathwaysForPathwayIdpathway;
	}

}
