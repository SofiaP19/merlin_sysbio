package hibernate.merlin_hibernate.entities;
// Generated 18/mai/2018 12:30:24 by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ModelPromoter generated by hbm2java
 */
@Entity
@Table(name = "model_promoter", catalog = "sysbio_model")
public class ModelPromoter implements java.io.Serializable {

	private Integer idpromoter;
	private String name;
	private Double absolutePosition;
	private Set<ModelTranscriptionUnit> modelTranscriptionUnits = new HashSet<ModelTranscriptionUnit>(0);
	private Set<ModelProtein> modelProteins = new HashSet<ModelProtein>(0);
	private Set<ModelRegulatoryEvent> modelRegulatoryEvents = new HashSet<ModelRegulatoryEvent>(0);

	public ModelPromoter() {
	}

	public ModelPromoter(String name, Double absolutePosition, Set<ModelTranscriptionUnit> modelTranscriptionUnits,
			Set<ModelProtein> modelProteins, Set<ModelRegulatoryEvent> modelRegulatoryEvents) {
		this.name = name;
		this.absolutePosition = absolutePosition;
		this.modelTranscriptionUnits = modelTranscriptionUnits;
		this.modelProteins = modelProteins;
		this.modelRegulatoryEvents = modelRegulatoryEvents;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idpromoter", unique = true, nullable = false)
	public Integer getIdpromoter() {
		return this.idpromoter;
	}

	public void setIdpromoter(Integer idpromoter) {
		this.idpromoter = idpromoter;
	}

	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "absolute_position", precision = 22, scale = 0)
	public Double getAbsolutePosition() {
		return this.absolutePosition;
	}

	public void setAbsolutePosition(Double absolutePosition) {
		this.absolutePosition = absolutePosition;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_transcription_unit_promoter", catalog = "sysbio_model", joinColumns = {
			@JoinColumn(name = "promoter_idpromoter", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "transcription_unit_idtranscription_unit", nullable = false, updatable = false) })
	public Set<ModelTranscriptionUnit> getModelTranscriptionUnits() {
		return this.modelTranscriptionUnits;
	}

	public void setModelTranscriptionUnits(Set<ModelTranscriptionUnit> modelTranscriptionUnits) {
		this.modelTranscriptionUnits = modelTranscriptionUnits;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "model_sigma_promoter", catalog = "sysbio_model", joinColumns = {
			@JoinColumn(name = "promoter_idpromoter", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "protein_idprotein", nullable = false, updatable = false) })
	public Set<ModelProtein> getModelProteins() {
		return this.modelProteins;
	}

	public void setModelProteins(Set<ModelProtein> modelProteins) {
		this.modelProteins = modelProteins;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modelPromoter")
	public Set<ModelRegulatoryEvent> getModelRegulatoryEvents() {
		return this.modelRegulatoryEvents;
	}

	public void setModelRegulatoryEvents(Set<ModelRegulatoryEvent> modelRegulatoryEvents) {
		this.modelRegulatoryEvents = modelRegulatoryEvents;
	}

}
